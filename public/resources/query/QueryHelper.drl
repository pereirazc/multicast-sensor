package query;

import models.*;

declare Data
    @role(event)
    @timestamp(timestamp)
    @expires(1h)
end

query "UserByMailAndPassword" (String mail, String pswd)
   user: User(email==mail, password==pswd)
end

query "UserByToken" (String token)
   auth: Auth(this.token==token, user: this.user)
end

query "Sensors" (String userId)
    user: User(this.userId == userId)
    sensor: Sensor(owner == user)
end

query "Sensor" (String userId, String sensorId)
    user: User(this.userId == userId)
    sensor: Sensor(owner == user, this.sensorId==sensorId)
end

query "Feeds" (String userId, String sensorId)
    user: User(this.userId == userId)
    sensor: Sensor(owner == user, this.sensorId==sensorId)
    feed: Feed(this.sensor == sensor)
end

query "Feed" (String sensorId, String feedId)
    sensor: Sensor(this.sensorId==sensorId)
    feed: Feed(this.sensor == sensor, this.feedId==feedId)
end

query "FeedByUser" (String userId, String sensorId, String feedId)
    user: User(this.userId == userId)
    sensor: Sensor(owner == user, this.sensorId==sensorId)
    feed: Feed(this.sensor == sensor, this.feedId==feedId)
end

query "FeedStream" (String userId, String sensorId, String feedId)
    user: User(this.userId == userId)
    sensor: Sensor(this.sensorId==sensorId)
    feed: Feed(this.sensor == sensor, this.feedId== feedId)
    accumulate($e: Data(this.feed == feed) over window:length(30),
                stream: collectList( $e ))
end